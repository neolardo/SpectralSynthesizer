<UserControl x:Class="SpectralSynthesizer.InstrumentBuilderControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:SpectralSynthesizer"
             mc:Ignorable="d" 
             x:Name="instrumentBuilder"
             d:DesignHeight="450" d:DesignWidth="800">
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition 
                Height="*" 
                MinHeight="{x:Static local:ProjectViewModel.MinimumSplitHeight}"/>
            <RowDefinition Height="{StaticResource SplitterSize}"/>
            <RowDefinition
                Height="*"      
                MinHeight="{x:Static local:ProjectViewModel.MinimumSplitHeight}"/>
        </Grid.RowDefinitions>
        <!-- upper placeholder -->
        <local:PlaceholderTextGrid
            Panel.ZIndex="1"
            Visibility="{Binding WaveViewViewModel.IsContentLoaded, Converter={local:BooleanToHiddenVisibilityConverter}, ConverterParameter=_}"
            Grid.Row="0"
            Drop="WaveView_Drop"
            Text="Drop a wave file here"/>
        <!-- upper side -->
        <Grid
            Visibility="{Binding WaveViewViewModel.IsContentLoaded, Converter={local:BooleanToHiddenVisibilityConverter}}"
            Grid.Row="0">
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="auto"/>
            </Grid.RowDefinitions>
            <!-- waveview and rulerview -->
            <local:AudioBufferBorderCustomControl
                State="{Binding State}"
                LeftClickCommand="{Binding LeftClickCommand}"
                DataContext="{Binding WaveAudioBufferViewModel}"
                Grid.Row="0">
                <Grid
                    DataContext="{Binding DataContext, ElementName=instrumentBuilder}">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                <local:RulerView
                    DataContext="{Binding WaveRulerViewViewModel}"
                    Background="{StaticResource BackgroundDarkBrush}"
                    Drop="WaveView_Drop"
                    AllowDrop="True"
                    Grid.Row="0"/>
                <local:WaveView
                    x:Name="waveView"
                    DataContext="{Binding WaveViewViewModel}"
                    Background="{StaticResource BackgroundDarkBrush}"
                    Drop="WaveView_Drop"
                    AllowDrop="True"
                    local:DescriptionProperty.Value="{Binding IsMouseOver,
                    ElementName=waveView,
                    Converter={local:DescriptionConverter},
                    ConverterParameter=instrument_spectrumview}"
                    Grid.Row="1"/>
                </Grid>
            </local:AudioBufferBorderCustomControl>
            <!-- single midi view -->
            <local:PlaceholderTextGrid
                Panel.ZIndex="1"
                Visibility="{Binding WaveToMidiConversionStatus, Converter={local:WaveToMidiConversionStatusToHiddenVisibilityConverter}, ConverterParameter=_}"
                Grid.Row="2"
                AllowDrop="True"
                Drop="SingleMidiView_Drop"
                Text="{Binding WaveToMidiConversionStatus, Converter={local:WaveToMidiConversionStatusToStringConverter}}"/>
            <local:AudioBufferBorderCustomControl
                State="{Binding State}"
                LeftClickCommand="{Binding LeftClickCommand}"
                Grid.Row="2"
                Margin="2 0 2 2"
                Visibility="{Binding DataContext.WaveToMidiConversionStatus,ElementName=instrumentBuilder, Converter={local:WaveToMidiConversionStatusToHiddenVisibilityConverter}}"
                DataContext="{Binding SingleMidiAudioBufferViewModel}">
                <local:SingleMidiView
                    x:Name="singleMidiView"
                    DataContext="{Binding DataContext.SingleMidiViewViewModel, ElementName=instrumentBuilder}"
                    Background="{StaticResource BackgroundDarkBrush}"
                    Drop="SingleMidiView_Drop"                
                    AllowDrop="True"
                    local:DescriptionProperty.Value="{Binding IsMouseOver,
                        ElementName=singleMidiView,
                        Converter={local:DescriptionConverter},
                        ConverterParameter=intrument_singemidiview}"/>
            </local:AudioBufferBorderCustomControl>
        </Grid>
        <!-- center grid splitter -->
        <GridSplitter 
            Background="{StaticResource BackgroundIntermediateBrush}"
            Grid.Row="1"
            Height="{StaticResource SplitterSizeDouble}"
            HorizontalAlignment="Stretch"/>
        <!-- lower placeholder -->
        <local:PlaceholderTextGrid
            Panel.ZIndex="1"
            Visibility="{Binding InstrumentViewViewModel.IsContentLoaded, Converter={local:BooleanToHiddenVisibilityConverter}, ConverterParameter=_}"
            Grid.Row="2"
            Drop="WaveView_Drop"
            Text="Create or load an instrument"/>
        <!-- lower side -->
        <Grid
            Grid.Row="2"
            Visibility="{Binding InstrumentViewViewModel.IsContentLoaded, Converter={local:BooleanToHiddenVisibilityConverter}}">
            <Grid.RowDefinitions>
                <RowDefinition
                    Height="7*"/>
                <RowDefinition 
                    Height="3*"
                    MinHeight="{x:Static local:InstrumentViewViewModel.MinimumHeight}"
                    MaxHeight="{x:Static local:InstrumentViewViewModel.MaximumHeight}"/>
            </Grid.RowDefinitions>
            <local:NoteView
                x:Name="noteView"
                Background="{StaticResource BackgroundDarkBrush}"
                IsContentLoaded="{Binding IsNoteContentLoaded}"
                NoteAudioBufferDataContext="{Binding NoteAudioBufferViewModel}"
                SinusoidAudioBufferDataContext="{Binding SinusoidAudioBufferViewModel}"
                TransientAudioBufferDataContext="{Binding TransientAudioBufferViewModel}"
                NoiseAudioBufferDataContext="{Binding NoiseAudioBufferViewModel}"
                SinusoidRulerViewDataContext="{Binding SinusoidRulerViewViewModel}"
                SinusoidViewDataContext="{Binding SinusoidViewViewModel}"
                TransientRulerViewDataContext="{Binding TransientRulerViewViewModel}"
                TransientViewDataContext="{Binding TransientViewViewModel}"
                NoiseRulerViewDataContext="{Binding NoiseRulerViewViewModel}"
                NoiseViewDataContext="{Binding NoiseViewViewModel}"
                local:DescriptionProperty.Value="{Binding IsMouseOver,
                ElementName=noteView,
                Converter={local:DescriptionConverter},
                ConverterParameter=instrument_noteView}"/>
            <local:AudioBufferBorderCustomControl
                State="{Binding State}"
                LeftClickCommand="{Binding LeftClickCommand}"
                DataContext="{Binding InstrumentAudioBufferViewModel}"
                Grid.Row="1">
                <local:InstrumentView
                    x:Name="instrumentView"
                    DataContext="{Binding DataContext.InstrumentViewViewModel, ElementName=instrumentBuilder}"
                    Background="{StaticResource BackgroundDarkBrush}"
                    local:DescriptionProperty.Value="{Binding IsMouseOver,
                    ElementName=instrumentView,
                    Converter={local:DescriptionConverter},
                    ConverterParameter=instrument_spectrumview}"/>
            </local:AudioBufferBorderCustomControl>
        </Grid>
    </Grid>
</UserControl>
